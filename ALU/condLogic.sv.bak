module condLogic(input logic clk, reset, flagUpdate,zero,input logic PCS, RegW, //MemW, 
						output logic PCSrc, RegWrite); // MemWrite);

					
	//logic [1:0] FlagWrite;
	logic zeroFlag;
	//logic CondEx;
	
	flopenr #(1)flagreg1(clk, reset,flagUpdate, aluZero, zeroFlag);
	
	//flopenr #(2)flagreg0(clk, reset, FlagWrite[0], ALUFlags[1:0], Flags[1:0]);
	
	// write controls are conditional
	//condcheck cc(Cond, Flags, CondEx);
	//assign FlagWrite = FlagW & {2{CondEx}};
	//assign MemWrite = MemW & zeroFlag;
	//assign PCSrc = PCS & zeroFlag;
	
	assign RegWrite = RegW & zeroFlag;
	
	
endmodule 